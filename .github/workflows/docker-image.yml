name: DeepNote Keepalive

on:
  schedule:
    # 每5分钟运行一次
    - cron: '*/5 * * * *'
  # 可选：添加手动触发选项，方便测试
  workflow_dispatch:

jobs:
  keepalive:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Check URL status
      id: url_check
      run: |
          python -c "
          import requests
          import sys
          try:
              url = 'https://10a5d85e-9ca1-4d26-920a-ffdb46678a38.deepnoteproject.com'
              response = requests.get(url, timeout=30)
              status_code = response.status_code
              print(f'URL status code: {status_code}')
              if status_code != 200:
                  print('::set-output name=is_error::true')
                  print('::set-output name=status_code::' + str(status_code))
                  sys.exit(0)  # 非200状态码，但脚本成功执行
              else:
                  print('::set-output name=is_error::false')
                  print('::set-output name=status_code::200')
                  sys.exit(0)  # 成功状态码，脚本成功执行
          except Exception as e:
              print(f'Error checking URL: {str(e)}')
              print('::set-output name=is_error::true')
              print('::set-output name=error_message::' + str(e))
              sys.exit(0)  # 出错，但脚本成功执行
          "
      
      # 只有当URL返回非200状态码时才执行后续步骤
    - name: Run action on non-200 status
      if: steps.url_check.outputs.is_error == 'true'
      run: |
          echo "URL returned non-200 status code or error!"
          echo "Status code: ${{ steps.url_check.outputs.status_code }}"
          echo "Error message: ${{ steps.url_check.outputs.error_message }}"
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install playwright
        python -m playwright install firefox
        
    - name: Run keepalive script
      env:
        GT_PW: ${{ secrets.GT_PW }}
        DEEP_URL: ${{ secrets.DEEP_URL }}
      run: |
        # 直接运行仓库根目录的main.py
        python main.py  
