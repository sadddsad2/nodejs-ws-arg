name: DeepNote Keepalive

on:
  schedule:
    # 每5分钟
    - cron: '*/5 * * * *'
  # 可选：添加手动触发选项，方便测试
  workflow_dispatch:

jobs:
  keepalive:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Restore cookies cache
      id: cache-cookies
      uses: actions/cache/restore@v3
      with:
        path: deepnote_cookies.json
        key: deepnote-cookies-v1
        restore-keys: |
          deepnote-cookies-
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Restore pip cache
      id: cache-pip
      uses: actions/cache/restore@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Restore Playwright cache
      id: cache-playwright
      uses: actions/cache/restore@v3
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/playwright.version') }}
        restore-keys: |
          ${{ runner.os }}-playwright-
          
    - name: Create playwright.version file if not exists
      run: |
        if [ ! -f "playwright.version" ]; then
          playwright_version=$(pip show playwright 2>/dev/null | grep Version | cut -d ' ' -f 2 || echo "1.34.0")
          echo "$playwright_version" > playwright.version
        fi
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # 如果存在requirements.txt，则安装
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          pip install playwright
        fi
        # 只有在Playwright缓存不存在时才安装浏览器
        if [ "${{ steps.cache-playwright.outputs.cache-hit }}" != 'true' ]; then
          echo "Installing Playwright browsers..."
          python -m playwright install firefox
        else
          echo "Using cached Playwright browsers"
        fi
        
    - name: Run keepalive script
      env:
        # 存储在GitHub Secrets中的凭据
        GT_PW: ${{ secrets.GT_PW }}
        DEEP_URL: ${{ secrets.DEEP_URL }}
      run: |
        python main.py
        
    - name: Save cookies cache
      uses: actions/cache/save@v3
      with:
        path: deepnote_cookies.json
        key: deepnote-cookies-v1
        
    - name: Save pip cache
      uses: actions/cache/save@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        
    - name: Save Playwright cache
      uses: actions/cache/save@v3
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/playwright.version') }}

  cleanup-logs:
    runs-on: ubuntu-latest
    needs: keepalive
    steps:
      - name: Delete old workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 10
